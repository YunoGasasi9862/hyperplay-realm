@model IEnumerable<GameDTO>

@* Generated from Custom Template. *@
@* Model namespace using directive should be added to _ViewImports.cshtml. *@

@{
    var containerDivClass = "container py-5";
    ViewData["Title"] = "Game List";
}

<style>
    body {
        background-image: url('@Url.Content("~/images/Geralt.jpg")');
        background-size: cover;
        background-position: center center;
        animation: backgroundMove 15s ease-in-out infinite, backgroundZoom 20s infinite alternate;
        background-attachment: fixed; /* Keeps the background fixed while scrolling */
        margin: 0;
        padding: 0;
    }

    /* Optional: Adjust hero section to ensure text stays readable */
    .hero-section {
        background-color: rgba(0, 0, 0, 0.6); /* Dark overlay for better text visibility */
        padding: 5rem 0;
    }
</style>

<div class="bg-gradient-primary-to-secondary text-black text-center py-4 shadow-lg">
    <h1 class="display-4">@ViewData["Title"]</h1>
    <p class="lead">Manage your games with ease</p>
</div>

@if (Model is not null)
{
    <div class="@containerDivClass">
        @if (TempData["Message"] is not null)
        {
            <div class="alert alert-danger text-center mb-4">
                @TempData["Message"]
            </div>
        }

        <div class="row mb-4">
            <div class="col-md-8 text-success fw-bold">
                @Model.Count() record(s) found.
            </div>
            <div class="col-md-4 text-end">
                <a asp-action="Create" class="btn btn-primary shadow-sm">+ Add New Game</a>
            </div>
        </div>

        <table class="table table-striped table-hover shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Title)</th>
                    <th>@Html.DisplayNameFor(model => model.Price)</th>
                    <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                    <th>@Html.DisplayNameFor(model => model.ReleaseDate)</th>
                    <th>@Html.DisplayNameFor(model => model.PublisherName)</th>
                    <th>@Html.DisplayNameFor(model => model.GenreList)</th>
                    <th>@Html.DisplayNameFor(model => model.DeveloperList)</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                        <td>@Html.DisplayFor(modelItem => item.ReleaseDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.PublisherName)</td>
                        <td>@Html.DisplayFor(modelItem => item.GenreList)</td>
                        <td>@Html.DisplayFor(modelItem => item.DeveloperList)</td>
                        <td class="text-end">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm shadow-sm">Details</a>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm shadow-sm ms-2">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm shadow-sm ms-2">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
