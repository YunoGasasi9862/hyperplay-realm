@model IEnumerable<GameDTO>

@* Generated from Custom Template. *@
@* Model namespace using directive should be added to _ViewImports.cshtml. *@

@{
    var containerDivClass = "container py-5";
    ViewData["Title"] = "Game List";
}

<style>
    body {
        background-image: url('@Url.Content("~/images/Geralt.jpg")');
        background-size: cover;
        background-position: center center;
        animation: backgroundMove 15s ease-in-out infinite, backgroundZoom 20s infinite alternate;
        background-attachment: fixed;
        margin: 0;
        padding: 0;
    }

    /* Optional: Adjust hero section to ensure text stays readable */
    .hero-section {
        background-color: rgba(0, 0, 0, 0.6); /* Dark overlay for better text visibility */
        padding: 5rem 0;
    }

    /* Custom table styles */
    .custom-table {
        color: #fff;
        border-collapse: separate;
        border-spacing: 0;
        border-radius: 8px;
        overflow: hidden;
    }

        .custom-table th {
            background: linear-gradient(90deg, #6a11cb, #2575fc); /* Gradient header */
            color: #fff;
            text-align: center;
        }

        .custom-table td {
            background-color: rgba(0, 0, 0, 0.8); /* Dark background for rows */
            color: #fff; /* White text */
        }

        .custom-table tbody tr:hover {
            background-color: rgba(255, 255, 255, 0.2); /* Brighter hover effect */
            transform: scale(1.02); /* Slight zoom effect */
            transition: all 0.3s ease; /* Smooth transition */
        }

        .custom-table td img {
            width: 50px;
            height: 50px;
            object-fit: cover; /* Ensures logo fits perfectly */
        }

        .custom-table td {
            vertical-align: middle; /* Aligns text with images */
        }

        .add-game-button {
            background: linear-gradient(90deg, #6a11cb, #2575fc); /* Same as table header gradient */
            color: #fff;
            border: none;
            font-weight: bold;
            border-radius: 50px;
            padding: 10px 20px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
         }

        .add-game-button:hover {
            transform: scale(1.1); /* Slight zoom effect */
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.3); /* More prominent shadow */
            background: linear-gradient(90deg, #2575fc, #6a11cb); /* Reverse the gradient on hover */
        }

        .add-game-button:active {
            transform: scale(1); /* Restore size when clicked */
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        /* Common Button Gradient (Matches Table Header) */
        .btn-header-gradient {
            background: linear-gradient(90deg, #6a11cb, #2575fc); /* Same gradient as table header */
            color: white; /* Text color */
            border: none; /* Clean look */
            padding: 0.4rem 0.8rem; /* Adjust padding for smaller buttons */
            font-weight: bold; /* Bold text for emphasis */
            border-radius: 0.3rem; /* Subtle rounding */
            text-transform: uppercase; /* Optional: Make text uppercase */
            transition: all 0.3s ease-in-out; /* Smooth hover effect */
            font-size: 0.875rem; /* Slightly smaller text for compact look */
        }

        /* Hover Effect for All Buttons */
        .btn-header-gradient:hover {
            background: linear-gradient(90deg, #2575fc, #6a11cb); /* Reverse gradient */
            transform: scale(1.05); /* Slightly enlarge */
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3); /* Add shadow effect */
        }

        /* Optional: Add slight differentiation for Delete */
        .btn-header-gradient.btn-danger {
            background: linear-gradient(90deg, #cb2d3e, #ef473a); /* Red gradient for danger */
        }

         .btn-header-gradient.btn-danger:hover {
                background: linear-gradient(90deg, #ef473a, #cb2d3e); /* Reverse red gradient */
         }

    .actions-container {
        display: flex;
        justify-content: flex-end;
        gap: 0.5rem; /* Adjust spacing as needed */
    }

    .record-count {
        background: linear-gradient(90deg, #6a11cb, #2575fc); /* Gradient matching table header */
        color: #fff; /* White text */
        padding: 10px 20px; /* Add some padding */
        border-radius: 8px; /* Rounded corners */
        font-weight: bold; /* Make it bold */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Add subtle shadow */
        display: inline-block; /* Keep it compact */
    }




</style>

<div class="bg-gradient-primary-to-secondary text-white text-center py-4 shadow-lg">
    <h1 class="display-4">@ViewData["Title"]</h1>
    <p class="lead">Manage your games with ease</p>
</div>

@if (Model is not null)
{
    <div class="@containerDivClass">
        @if (TempData["Message"] is not null)
        {
            <div class="alert alert-danger text-center mb-4">
                @TempData["Message"]
            </div>
        }

        <div class="row mb-4">
            <div class="col-md-8">
                <div class="record-count">
                    @Model.Count() record(s) found.
                </div>
            </div>
            <div class="col-md-4 text-end">
                <a asp-action="Create" class="btn btn-header-gradient btn-sm shadow-sm">+ Add New Game</a>
            </div>
        </div>

        <table class="table custom-table shadow-lg">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.GameLogo)</th>
                    <th>@Html.DisplayNameFor(model => model.Title)</th>
                    <th>@Html.DisplayNameFor(model => model.Price)</th>
                    <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                    <th>@Html.DisplayNameFor(model => model.ReleaseDate)</th>
                    <th>@Html.DisplayNameFor(model => model.PublisherName)</th>
                    <th>@Html.DisplayNameFor(model => model.GenreList)</th>
                    <th>@Html.DisplayNameFor(model => model.DeveloperList)</th>
                    <th class="text-end">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <img src="@Url.Content("~/images/Game Default.jpg")" alt="Game Logo" class="rounded-circle">
                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                        <td>@Html.DisplayFor(modelItem => item.ReleaseDate)</td>
                        <td>@Html.DisplayFor(modelItem => item.PublisherName)</td>
                        <td>@Html.DisplayFor(modelItem => item.GenreList)</td>
                        <td>@Html.DisplayFor(modelItem => item.DeveloperList)</td>
                        <td class="text-end">
                            <div class="d-flex justify-content-end gap-2">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-header-gradient btn-sm shadow-sm">Details</a>
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-header-gradient btn-sm shadow-sm">Edit</a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-header-gradient btn-sm shadow-sm">Delete</a>
                            </div>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
}
