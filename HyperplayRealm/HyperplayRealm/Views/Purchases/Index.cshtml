@model IEnumerable<PurchaseDTO>

@* Generated from Custom Template. *@
@* Model namespace using directive should be added to _ViewImports.cshtml. *@

@{
    var containerDivClass = "container py-5";
    ViewData["Title"] = "Purchase List";
}

<style>
    body {
        background-image: url('@Url.Content("~/images/DP.jpg")');
        background-size: cover;
        background-position: center center;
        animation: backgroundMove 15s ease-in-out infinite, backgroundZoom 20s infinite alternate;
        background-attachment: fixed;
        margin: 0;
        padding: 0;
    }

    .hero-section {
        background-color: rgba(0, 0, 0, 0.6);
        padding: 5rem 0;
    }

    .custom-table {
        color: #fff;
        border-collapse: separate;
        border-spacing: 0;
        border-radius: 8px;
        overflow: hidden;
    }

        .custom-table th {
            background: linear-gradient(90deg, #6a11cb, #2575fc);
            color: #fff;
            text-align: center;
        }

        .custom-table td {
            background-color: rgba(0, 0, 0, 0.8);
            color: #fff;
        }

        .custom-table tbody tr:hover {
            background-color: rgba(255, 255, 255, 0.2);
            transform: scale(1.02);
            transition: all 0.3s ease;
        }

        .custom-table td img {
            width: 50px;
            height: 50px;
            object-fit: cover;
        }

    .actions-container {
        display: flex;
        justify-content: flex-end;
        gap: 0.5rem;
    }

    .record-count {
        background: linear-gradient(90deg, #6a11cb, #2575fc);
        color: #fff;
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: bold;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: inline-block;
    }

    .btn-header-gradient {
        background: linear-gradient(90deg, #6a11cb, #2575fc);
        color: white;
        border: none;
        font-weight: bold;
        border-radius: 0.3rem;
        padding: 0.4rem 0.8rem;
        font-size: 0.875rem;
        transition: all 0.3s ease-in-out;
    }

        .btn-header-gradient:hover {
            background: linear-gradient(90deg, #2575fc, #6a11cb);
            transform: scale(1.05);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
        }
</style>

<div class="bg-gradient-primary-to-secondary text-white text-center py-4 shadow-lg">
    <h1 class="display-4">@ViewData["Title"]</h1>
    <p class="lead">Manage your purchases with ease</p>
</div>

@if (Model is not null)
{
    <form asp-action="Index" autocomplete="off">
        <div class="@containerDivClass">
            @if (TempData["Message"] is not null)
            {
                <div class="alert alert-danger text-center mb-4">
                    @TempData["Message"]
                </div>
            }

            <div class="row mb-4">
                <div class="col-md-8">
                    <div class="record-count">
                        @Model.Count() record(s) found.
                    </div>
                </div>
                <div class="col-md-4 text-end">
                    <a asp-action="Create" class="btn btn-header-gradient btn-sm shadow-sm">+ Add New Purchase</a>
                </div>
            </div>

            <table class="table custom-table shadow-lg">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Game)</th>
                        <th>@Html.DisplayNameFor(model => model.PurchaseDate)</th>
                        <th class="text-end">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Game)</td>
                            <td>@Html.DisplayFor(modelItem => item.PurchaseDate)</td>
                            <td class="text-end">
                                <div class="d-flex justify-content-end gap-2">
                                    @Html.ActionLink("Details", "Details", new { /* id = item.Record.PrimaryKey */ })&nbsp;|&nbsp;
                                    @Html.ActionLink("Edit", "Edit", new { /* id = item.Record.PrimaryKey */ })&nbsp;|&nbsp;
                                    @Html.ActionLink("Delete", "Delete", new { /* id = item.Record.PrimaryKey */ })
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>
}
